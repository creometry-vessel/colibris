apiVersion: apps/v1
kind: Deployment
metadata:
  # namespace: colibris
  name: indexcolibris-front-deploy
  labels:
    app: colibris
spec:
  selector:
    matchLabels:
      run: colibris-front
  replicas: 1
  strategy: 
    type: RollingUpdate
    revisionHistoryLimit: 3
  template:
    metadata:
      labels:
        run: colibris-front
    spec:
      # nodeSelector:
      #   host: colibris
        
      containers:
      - name: customerui
        image: colibristn/customerui:v0.2.4
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: "200m"
            memory: "256Mi"
          requests:
            cpu: "5m"
            memory: "10Mi"  
        volumeMounts:
          - name: colibris-config-volume
            mountPath: /usr/share/nginx/html
            readOnly: true
            
      volumes:
      - name: colibris-config-volume
        configMap:
          name: colibris-configmap

---
apiVersion: v1
kind: Service
metadata:
  namespace: colibris
  name: colibris-front-svc
  labels:
    app: colibris
spec:
  ports:
  - port: 80
    protocol: TCP
  selector:
    run: colibris-front

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress
  namespace: colibris
  annotations:
    # nginx.ingress.kubernetes.io/rewrite-target: /
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - test-colibris.creometry.dev
    - colibristunisie.com
   
  rules:
  - host: test-colibris.creometry.dev
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: colibris-front-svc
            port:
              number: 80
  - host: colibristunisie.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: colibris-front-svc
            port:
              number: 80